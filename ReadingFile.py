i = 1
malicious = 0
benign = 0
#set the status of the PDF file to be benign
status = 0	
featurenum = 0
#function to search for malicious features in the PDF file
def searchicng_malicious_features(value):
    global status
    #Checking the malicious features 
    #checking the value of the malicous feature 
    # if it is greater than zero then the PDF file is malicious and status is set to 1 
    # if it is  zero then the PDF file is benign  and status reamins as zero as it is
    if '/Encrypt' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/JS' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/Javascript' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/AA' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/OpenAction' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/AcroForm' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/JBIG2Decode' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/RichMedia' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/Luanch' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
    if '/EmbeddedFile' in value:
        size = len(value[1])
        if size > 1:
            featurenum = value[1]
            result = float(featurenum[0])
        else:
            result = float(value[1])
        if result > 0.0:
            status = 1
# the classifier function classify PDF file as malicious or benign
def classifier():
    global status
    global malicious
    global benign
    if status == 1:
        malicious = malicious + 1
        print("Malicious PDF file detected")
    if status == 0:
        benign = benign +  1
        print("Benign PDF file detected")
# Reading the PDF features from output.txt file
file_name = 'output.txt'
outputfile = open(file_name,'r')
file = outputfile.readlines()
outputfile.close()
for line in file:
    features = line.split('\\n')
    for feature in features:
        value = feature.split()
        # calling the seach malicious function 
        searchicng_malicious_features(value)
        if i % 24 == 0:
            classifier()
            status = 0
            # calling the classification function   
        i = i + 1
total = malicious + benign
print("Total number of Malicious PDF files detected: ",malicious)
print("Total number of Benign PDF files detected: ",benign)
print("Total number of PDF files scanned: ",total)

     



